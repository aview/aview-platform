<?xml version="1.0" encoding="utf-8"?>
<!--- The default skin class for the Spark Button component.

	   @see spark.components.Button

	  @langversion 3.0
	  @playerversion Flash 10
	  @playerversion AIR 1.5
	  @productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:fb="http://ns.adobe.com/flashbuilder/2009" minWidth="21" minHeight="21" alpha.disabled="0.5">

	<fx:Metadata>
		<![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.Button")]
        ]]>
	</fx:Metadata>

	<fx:Script fb:purpose="styling">
		<![CDATA[
			import spark.components.Group;
			/* Define the skin elements that should not be colorized.
			For button, the graphics are colorized but the label is not. */
			static private const exclusions:Array=["labelDisplay"];
			
			/**
			 * @private
			 */
			override public function get colorizeExclusions():Array
			{
				return exclusions;
			}
			
			/**
			 * @private
			 */
			override protected function initializationComplete():void
			{
				useChromeColor=true;
				super.initializationComplete();
			}
			
			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				var cr:Number=getStyle("cornerRadius");
				
				if (cornerRadius != cr)
				{
					cornerRadius=cr;
					shadow.radiusX=cornerRadius;
					fill.radiusX=cornerRadius;
					lowlight.radiusX=cornerRadius;
					highlight.radiusX=cornerRadius;
					border.radiusX=cornerRadius;
				}
				
				if (highlightStroke)
					highlightStroke.radiusX=cornerRadius;
				if (hldownstroke1)
					hldownstroke1.radiusX=cornerRadius;
				if (hldownstroke2)
					hldownstroke2.radiusX=cornerRadius;
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
			
			//VVCR: Variable declaration can be on top where the actionscript starts.
			private var cornerRadius:Number=10;
		]]>
	</fx:Script>

	<!-- states -->
	<s:states>
		<s:State name="up"/>
		<s:State name="over"/>
		<s:State name="down"/>
		<s:State name="disabled"/>
	</s:states>

	<!-- layer 1: shadow -->
	<!--- @private -->
	<s:Rect id="shadow" left="-1" right="-1" top="-1" bottom="-1" radiusX="2">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry alpha="0.01" color="0xD9D9D9" alpha.down="0" color.down="0xD9D9D9"/>
				<s:GradientEntry alpha="0.07" color="0xD9D9D9" alpha.down="0.5"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<!-- layer 2: fill -->
	<!--- @private -->
	<s:Rect id="fill" left="1" right="1" top="1" bottom="1" radiusX="2">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry alpha="0.85" color="0xD9D9D9" color.down="0xD9D9D9" color.over="0xD9D9D9"/>
				<s:GradientEntry alpha="0.85" color="0xD9D9D9" color.down="0xD9D9D9" color.over="0xD9D9D9"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<!-- layer 3: fill lowlight -->
	<!--- @private -->
	<s:Rect id="lowlight" left="1" right="1" top="1" bottom="1" radiusX="2">
		<s:fill>
			<s:LinearGradient rotation="270">
				<s:GradientEntry alpha="0.0627" color="0xD9D9D9" ratio="0.0"/>
				<s:GradientEntry alpha="0.0099" color="0xD9D9D9" ratio="0.48"/>
				<s:GradientEntry alpha="0" color="0xD9D9D9" ratio="0.48001"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<!-- layer 4: fill highlight -->
	<!--- @private -->
	<s:Rect id="highlight" left="1" right="1" top="1" bottom="1" radiusX="2">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry alpha="0.33" color="0xD9D9D9" ratio="0.0" alpha.down="0.12" alpha.over="0.22"/>
				<s:GradientEntry alpha="0.33" color="0xD9D9D9" ratio="0.48" alpha.down="0.12" alpha.over="0.22"/>
				<s:GradientEntry alpha="0" color="0xD9D9D9" ratio="0.48001"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<!-- layer 5: highlight stroke (all states except down) -->
	<!--- @private -->
	<s:Rect id="highlightStroke" excludeFrom="down" left="1" right="1" top="1" bottom="1" radiusX="2">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry color="0xD9D9D9" alpha.over="0.22"/>
				<s:GradientEntry color="0xD9D9D9" alpha.over="0.22"/>
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>

	<!-- layer 6: highlight stroke (down state only) -->
	<!--- @private -->
	<s:Rect id="hldownstroke1" includeIn="down" left="1" right="1" top="1" bottom="1" radiusX="2">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry alpha="0.25" color="0xD9D9D9" ratio="0.0"/>
				<s:GradientEntry alpha="0.25" color="0xD9D9D9" ratio="0.001"/>
				<s:GradientEntry alpha="0.07" color="0xD9D9D9" ratio="0.0011"/>
				<s:GradientEntry alpha="0.07" color="0xD9D9D9" ratio="0.965"/>
				<s:GradientEntry alpha="0.00" color="0xD9D9D9" ratio="0.9651"/>
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>
	<!--- @private -->
	<s:Rect id="hldownstroke2" includeIn="down" left="2" right="2" top="2" bottom="2" radiusX="2">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry alpha="0.09" color="0xD9D9D9" ratio="0.0"/>
				<s:GradientEntry alpha="0.00" color="0xD9D9D9" ratio="0.0001"/>
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>

	<!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
	<!--- @private -->
	<s:Rect id="border" left="0" right="0" top="0" bottom="0" width="69" height="20" radiusX="2">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry alpha="0.5625" color="0xD9D9D9" alpha.down="0.6375"/>
				<s:GradientEntry alpha="0.75" color="0xD9D9D9" alpha.down="0.85"/>
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>

	<!-- layer 8: text -->
	<!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay  -->
	<s:Label id="labelDisplay" left="10" right="10" top="2" bottom="2" horizontalCenter="0" maxDisplayedLines="1" textAlign="center" verticalAlign="middle" verticalCenter="1">
	</s:Label>

</s:SparkButtonSkin>
