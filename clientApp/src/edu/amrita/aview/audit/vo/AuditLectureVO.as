////////////////////////////////////////////////////////////////////////////////
//
// Copyright Â© 2013 E-Learning Research Lab, 
// Amrita Vishwa Vidyapeetham. All rights reserved. 
// E-Learning Research Lab and the A-VIEW logo are trademarks or
// registered trademarks of E-Learning Research Lab. 
// All other names used are the trademarks of their respective owners.
//
////////////////////////////////////////////////////////////////////////////////

/**
 *
 * File			: AuditLectureVO.as
 * Module		: Audit
 * Developer(s)	: Ramesh G, Sethu, Ashish
 * Reviewer(s)	: Meena S
 * Value Object Class for Audit Lecture, audit_lecture table.
 * Holds the Lecture entry and lecture exit details
 *
 */
package edu.amrita.aview.audit.vo
{
	import edu.amrita.aview.common.vo.Auditable;
	
	import mx.collections.ArrayCollection;
	
	[RemoteClass(alias="edu.amrita.aview.audit.entities.AuditLecture")]

	/**
	 * Value Object Class for Audit Lecture, audit_lecture table.
	 * Holds the Lecture entry and lecture exit details
	 */
	public class AuditLectureVO extends Auditable
	{
		/**
		 *
		 * @public
		 * constructor
		 */
		public function AuditLectureVO()
		{
		}
		
		/**
		 * Primary key, auto generated by database, while inserting a new Lecture entry audit.
		 */
		private var _auditLectureId:Number=0;
		
		/**
		 * Refrence to the login entry audit id
		 */
		private var _auditUserLoginid:Number=0;
		
		/**
		 * Reference to the lecture id
		 */
		private var _lectureId:Number=0;
		
		/**
		 * Indicates if the Class is setup with MulitBitrate option.
		 * If 'Y' the presenter publishes 3 video streams at three different bit rates
		 */
		private var _isMultiBitrate:String=null;
		
		/**
		 * Maximum number of student (User Type) who can enter a given session
		 */
		private var _maxStudents:int=0;
		
		/**
		 * The minimum bandwidth the Viewers can select while publishing the video
		 */
		private var _minPublishingBandwidthKbps:int=0;
		
		/**
		 * The maximum bandwidth the Viewers can select while publishing the video
		 */
		private var _maxPublishingBandwidthKbps:int=0;
		
		/**
		 * Indicates if the user is a Moderator for the class.
		 */
		private var _isModerator:String=null;
		
		/**
		 * The configured video codec for publishing,
		 * to be used by all the viewers in the session
		 */
		private var _videoCodec:String=null;
		
		/**
		 * List of the configured servers audit (AuditLectureServerVO) for the class.
		 * This list is populated only for the Moderator user Id, while entering into the class
		 */
		private var _auditLectureServers:ArrayCollection=null;
		
		/**
		 *
		 * @public
		 * Gets the auditLectureServers
		 * List of the configured servers audit (AuditLectureServerVO) for the class.
		 * This list is populated only for the Moderator user Id, while entering into the class
		 *
		 *
		 * @return ArrayCollection
		 */
		public function get auditLectureServers():ArrayCollection
		{
			return _auditLectureServers;
		}
		
		/**
		 *
		 * @public
		 * Sets the auditLectureServers
		 * List of the configured servers audit (AuditLectureServerVO) for the class.
		 * This list is populated only for the Moderator user Id, while entering into the class
		 *
		 * @param value type of ArrayCollection
		 * @return void
		 */
		public function set auditLectureServers(value:ArrayCollection):void
		{
			_auditLectureServers=value;
		}
		
		/**
		 *
		 * @public
		 * Adds the AuditLectureServerVO to the _auditLectureServers internal list,
		 * The list of AuditLectureServerVO will be added to database along with AuditLectureVO
		 *
		 * @param value auditLectureServer of AuditLectureServerVO
		 * @return void
		 */
		public function addAuditLectureServer(auditLectureServer:AuditLectureServerVO):void
		{
			if (this._auditLectureServers == null)
			{
				this._auditLectureServers=new ArrayCollection();
			}
			auditLectureServer.aviewAuditLecture=this;
			this._auditLectureServers.addItem(auditLectureServer);
		}
		
		
		/**
		 *
		 * @public
		 * Returns the concatinated data of the object
		 *
		 *
		 * @return String
		 */
		public function toString():String
		{
			return auditLectureId + ":" + auditUserLoginid + ":" + lectureId + ":" + isMultiBitrate + ":" + maxStudents + ":" + _isModerator + ":" + _videoCodec + ":" + minPublishingBandwidthKbps + ":" + maxPublishingBandwidthKbps + ":";
		}
		
		/**
		 *
		 * @public
		 * Gets the isModerator
		 * Indicates if the user is a Moderator for the class.
		 *
		 *
		 * @return String
		 */
		public function get isModerator():String
		{
			return _isModerator;
		}
		
		/**
		 *
		 * @public
		 * Sets the isModerator
		 * Indicates if the user is a Moderator for the class.
		 *
		 * @param isModerator type of String
		 * @return void
		 */
		public function set isModerator(isModerator:String):void
		{
			this._isModerator=isModerator;
		}

		/**
		 *
		 * @public
		 * Gets the auditLectureId, primery key of the audit_lecture record
		 *
		 *
		 * @return Number
		 */
		public function get auditLectureId():Number
		{
			return _auditLectureId;
		}
		/**
		 *
		 * @public
		 * Sets the auditLectureId, primery key of the audit_lecture record
		 *
		 * @param auditLectureId type of Number
		 * @return void
		 */
		public function set auditLectureId(auditLectureId:Number):void
		{
			this._auditLectureId=auditLectureId;
		}
		
		/**
		 *
		 * @public
		 * Gets the auditUserLoginId
		 * Refrence to the login entry audit id
		 *
		 *
		 * @return Number
		 */
		public function get auditUserLoginid():Number
		{
			return _auditUserLoginid;
		}
		
		/**
		 *
		 * @public
		 * Sets the auditUserLoginId
		 * Refrence to the login entry audit id
		 *
		 * @param auditUserLoginid type of Number
		 * @return void
		 */
		public function set auditUserLoginid(auditUserLoginid:Number):void
		{
			this._auditUserLoginid=auditUserLoginid;
		}
		
		/**
		 *
		 * @public
		 * Gets the lectureId
		 * Reference to the lecture id
		 *
		 *
		 * @return Number
		 */
		public function get lectureId():Number
		{
			return _lectureId;
		}
		
		/**
		 *
		 * @public
		 * Sets the lectureId
		 * Reference to the lecture id
		 *
		 * @param lectureid type of Number
		 * @return void
		 */
		public function set lectureId(lectureid:Number):void
		{
			this._lectureId=lectureid;
		}
		
		/**
		 *
		 * @public
		 * Gets the isMultiBitrate
		 * Indicates if the Class is setup with MulitBitrate option.
		 * If 'Y' the presenter publishes 3 video streams at three different bit rates
		 *
		 *
		 * @return String
		 */
		public function get isMultiBitrate():String
		{
			return _isMultiBitrate;
		}
		
		/**
		 *
		 * @public
		 * Sets the isMultiBitrate
		 * Indicates if the Class is setup with MulitBitrate option.
		 * If 'Y' the presenter publishes 3 video streams at three different bit rates
		 *
		 * @param isMultiBitrate type of String
		 * @return void
		 */
		public function set isMultiBitrate(isMultiBitrate:String):void
		{
			this._isMultiBitrate=isMultiBitrate;
		}
		
		/**
		 *
		 * @public
		 * Gets the maxStudents
		 * Maximum number of student (User Type) who can enter a given session
		 *
		 *
		 * @return int
		 */
		public function get maxStudents():int
		{
			return _maxStudents;
		}
		
		/**
		 *
		 * @public
		 * Sets the maxStudents
		 * Maximum number of student (User Type) who can enter a given session
		 *
		 * @param maxStudents type of int
		 * @return void
		 */
		public function set maxStudents(maxStudents:int):void
		{
			this._maxStudents=maxStudents;
		}
		
		/**
		 *
		 * @public
		 * Gets the minPublishingBandwidthKbps
		 * The minimum bandwidth the Viewers can select while publishing the video
		 *
		 *
		 * @return int
		 */
		public function get minPublishingBandwidthKbps():int
		{
			return _minPublishingBandwidthKbps;
		}

		/**
		 *
		 * @public
		 * Sets the minPublishingBandwidthKbps
		 * The minimum bandwidth the Viewers can select while publishing the video
		 *
		 * @param minPublishingBandwidthKbps type of int
		 * @return void
		 */
		public function set minPublishingBandwidthKbps(minPublishingBandwidthKbps:int):void
		{
			this._minPublishingBandwidthKbps=minPublishingBandwidthKbps;
		}
		
		/**
		 *
		 * @public
		 * Gets the maxPublishingBandwidthKbps
		 * The maximum bandwidth the Viewers can select while publishing the video
		 *
		 *
		 * @return int
		 */
		public function get maxPublishingBandwidthKbps():int
		{
			return _maxPublishingBandwidthKbps;
		}
		
		/**
		 *
		 * @public
		 * Sets the maxPublishingBandwidthKbps
		 * The maximum bandwidth the Viewers can select while publishing the video
		 *
		 * @param maxPublishingBandwidthKbps type of int
		 * @return void
		 */
		public function set maxPublishingBandwidthKbps(maxPublishingBandwidthKbps:int):void
		{
			this._maxPublishingBandwidthKbps=maxPublishingBandwidthKbps;
		}
		
		/**
		 *
		 * @public
		 * Gets the videoCodec
		 * The configured video codec for publishing,
		 * to be used by all the viewers in the session
		 *
		 *
		 * @return String
		 */
		public function get videoCodec():String
		{
			return _videoCodec;
		}
		
		/**
		 *
		 * @public
		 * Sets the videoCodec
		 * The configured video codec for publishing,
		 * to be used by all the viewers in the session
		 *
		 * @param videoCodec type of String
		 * @return void
		 */
		public function set videoCodec(videoCodec:String):void
		{
			this._videoCodec=videoCodec;
		}
	}
}
