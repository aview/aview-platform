////////////////////////////////////////////////////////////////////////////////
//
// Copyright Â© 2013 E-Learning Research Lab, 
// Amrita Vishwa Vidyapeetham. All rights reserved. 
// E-Learning Research Lab and the A-VIEW logo are trademarks or
// registered trademarks of E-Learning Research Lab. 
// All other names used are the trademarks of their respective owners.
//
////////////////////////////////////////////////////////////////////////////////

/**
 *
 * File			: AuditLectureServerVO.as
 * Module		: Audit
 * Developer(s)	: Ramesh G, Sethu, Ashish
 * Reviewer(s)	: Meena S
 *
 * Value Object Class for Audit Lecture Server, audit_lecture_server table.
 * Holds the single server details associated with the class
 *
 */

package edu.amrita.aview.audit.vo
{
	//Auditing imports
	import edu.amrita.aview.common.vo.Auditable;
	
	//The remote java class file which is mapped with this VO class
	[RemoteClass(alias="edu.amrita.aview.audit.entities.AuditLectureServer")]
	
	/**
	 * Value Object Class for Audit Lecture Server, audit_lecture_server table.
	 * Holds the single server details associated with the class
	 */
	public class AuditLectureServerVO extends Auditable
	{
		/**
		 *
		 * @public
		 * constructor
		 */
		public function AuditLectureServerVO()
		{
		}
		
		/**
		 * Primary key, auto generated by database, while inserting a new Lecture server entry audit.
		 */
		private var _auditLectureServerId:Number=0;
		
		/**
		 * Name of the server
		 */
		private var _serverName:String=null;
		
		/**
		 * Ip of the server
		 */
		private var _serverIP:String=null;
		
		/**
		 * Domain of the server. If Ip and Domain are present, domain takes precedence
		 */
		private var _serverDomain:String=null;
		
		/**
		 * Server port accepting the connections (80, 1935 etc)
		 */
		private var _serverPort:int=0;
		
		/**
		 * Default presenter's publishing bandwidth. Presenter can change this while publishing in the session
		 */
		private var _presenterPublishingBandwidthKbps:int=0;
		
		/**
		 * Reference to ServerType table. Identifies the type of the server such as FMS, WEB, etc
		 */
		private var _serverTypeId:int=0;
		
		/**
		 * The AuditLectureVO associated with this Server settings object
		 */
		private var _aviewAuditLecture:AuditLectureVO=null;
		
		/**
		 *
		 * @public
		 * Gets the aviewAuditLecture
		 * The AuditLectureVO associated with this Server settings object
		 *
		 *
		 * @return AuditLectureVO
		 */
		public function get aviewAuditLecture():AuditLectureVO
		{
			return _aviewAuditLecture;
		}
		
		/**
		 *
		 * @public
		 * Sets the aviewAuditLecture
		 * The AuditLectureVO associated with this Server settings object
		 *
		 * @param value type of AuditLectureVO
		 * @return void
		 */
		public function set aviewAuditLecture(value:AuditLectureVO):void
		{
			_aviewAuditLecture=value;
		}
		
		/**
		 *
		 * @public
		 * Gets the serverTypeId
		 * Reference to ServerType table. Identifies the type of the server such as FMS, WEB, etc
		 *
		 *
		 * @return int
		 */
		public function get serverTypeId():int
		{
			return _serverTypeId;
		}
		
		/**
		 *
		 * @public
		 * Sets the serverTypeId
		 * Reference to ServerType table. Identifies the type of the server such as FMS, WEB, etc
		 *
		 * @param value type of int
		 * @return void
		 */
		public function set serverTypeId(value:int):void
		{
			_serverTypeId=value;
		}
		
		/**
		 *
		 * @public
		 * Gets the presenterPublishingBandwidthKbps
		 * Default presenter's publishing bandwidth. Presenter can change this while publishing in the session
		 *
		 *
		 * @return int
		 */
		public function get presenterPublishingBandwidthKbps():int
		{
			return _presenterPublishingBandwidthKbps;
		}
		
		/**
		 *
		 * @public
		 * Sets the presenterPublishingBandwidthKbps
		 * Default presenter's publishing bandwidth. Presenter can change this while publishing in the session
		 *
		 * @param value type of int
		 * @return void
		 */
		public function set presenterPublishingBandwidthKbps(value:int):void
		{
			_presenterPublishingBandwidthKbps=value;
		}
		
		/**
		 *
		 * @public
		 * Gets the serverPort
		 * Server port accepting the connections (80, 1935 etc)
		 *
		 *
		 * @return int
		 */
		public function get serverPort():int
		{
			return _serverPort;
		}
		
		/**
		 *
		 * @public
		 * Sets the serverPort
		 * Server port accepting the connections (80, 1935 etc)
		 *
		 * @param value type of int
		 * @return void
		 */
		public function set serverPort(value:int):void
		{
			_serverPort=value;
		}
		
		/**
		 *
		 * @public
		 * Gets the serverDomain
		 * Domain of the server. If Ip and Domain are present, domain takes precedence
		 *
		 *
		 * @return String
		 */
		public function get serverDomain():String
		{
			return _serverDomain;
		}
		
		/**
		 *
		 * @public
		 * Sets the serverDomain
		 * Domain of the server. If Ip and Domain are present, domain takes precedence
		 *
		 * @param value type of String
		 * @return void
		 */
		public function set serverDomain(value:String):void
		{
			_serverDomain=value;
		}
		
		/**
		 *
		 * @public
		 * Gets the serverIP
		 * Ip of the server
		 *
		 *
		 * @return String
		 */
		public function get serverIP():String
		{
			return _serverIP;
		}
		
		/**
		 *
		 * @public
		 * Sets the serverIP
		 * Ip of the server
		 *
		 * @param value type of String
		 * @return void
		 */
		public function set serverIP(value:String):void
		{
			_serverIP=value;
		}
		
		/**
		 *
		 * @public
		 * Gets the serverName
		 * Name of the server
		 *
		 *
		 * @return String
		 */
		public function get serverName():String
		{
			return _serverName;
		}
		
		/**
		 *
		 * @public
		 * Sets the serverName
		 * Name of the server
		 *
		 * @param value type of String
		 * @return void
		 */
		public function set serverName(value:String):void
		{
			_serverName=value;
		}
		
		/**
		 *
		 * @public
		 * Gets the auditLectureServerId
		 * Primary key, auto generated by database, while inserting a new Lecture server entry audit.
		 *
		 *
		 * @return Number
		 */
		public function get auditLectureServerId():Number
		{
			return _auditLectureServerId;
		}
		
		/**
		 *
		 * @public
		 * Sets the auditLectureServerId
		 * Primary key, auto generated by database, while inserting a new Lecture server entry audit.
		 *
		 * @param value type of Number
		 * @return void
		 */
		public function set auditLectureServerId(value:Number):void
		{
			_auditLectureServerId=value;
		}
	
	}
}
