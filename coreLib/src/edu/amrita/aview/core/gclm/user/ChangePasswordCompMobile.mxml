<?xml version="1.0" encoding="utf-8"?>
<s:SkinnablePopUpContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 width="100%" 
		 height="100%"
		 fontWeight="bold"
		 mouseDownOutside="changePasswordCloseHandler(event)"
		 moveForSoftKeyboard="true"
		 resizeForSoftKeyboard="true"> 
	<fx:Script>
		<![CDATA[
			import mx.core.IChildList;
			import mx.core.UIComponent;
			import mx.events.FlexMouseEvent;
			import mx.managers.PopUpManager;
			import mx.managers.SystemManager;
			
			protected function changePasswordCloseHandler(event:FlexMouseEvent):void
			{
				var systemManager:SystemManager = FlexGlobals.topLevelApplication.systemManager;
				//Returns a list of all children.
				var childList:IChildList = systemManager.rawChildren;
				for(var i:int=childList.numChildren-1;i>=0;i--)
				{
					var childObject:* = childList.getChildAt(i);
					//If child object is Uicomponent.
					if (childObject is UIComponent)
					{
						var uiComponent:UIComponent = childObject as UIComponent;
						if (uiComponent.isPopUp && uiComponent.className == "MessageBox")
						{
							if(uiComponent.document.message == "Please fill mandatory details" || 
								uiComponent.document.message == "Current password does not match" ||
								uiComponent.document.message == "New password and Current password cannot be the same")
								{
									PopUpManager.removePopUp(uiComponent);
								}
						}
					}
				}
				this.close();
			}
			
		]]>
	</fx:Script>
	
	<fx:Script source="ChangePasswordCompUIHandler.as" />
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->	 
	</fx:Declarations>
	
	<s:Group width="100%" 
			 height="100%">
		<s:Rect width="100%" 
				height="100%"
				top="0"
				bottom="0"
				left="0"
				right="0">
			<s:fill>
				<s:SolidColor color="0X071124"/>
			</s:fill>
			<s:filters>
				<s:GlowFilter alpha="0.3" 
							  blurX="0" 
							  blurY="40" 
							  color="0xFFFFFF" 
							  inner="true"
							  strength="1"/>
			</s:filters>
			<s:stroke>
				<s:LinearGradientStroke weight="5" rotation="270"> 
					<s:GradientEntry color="0x696969"/>
					<s:GradientEntry color="0xB3B3B3"/>
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Rect>
		
		<s:VGroup width="100%"
				  height="100%"
				  verticalAlign="middle"
				  horizontalAlign="center"
				  paddingBottom="10"
				  paddingLeft="10"
				  paddingRight="10"
				  paddingTop="10">
			
			<s:Label text="Change Password"
					 color="0xFFFFFF"
					 fontWeight="bold"/>
			<s:Line width="100%">
				<s:stroke>
					<s:SolidColorStroke color="0xFFFFFF" weight="1" alpha="1.0"/>
				</s:stroke>
			</s:Line>
			<s:HGroup width="100%"
					  height="20%"
					  color="0xFFFFFF"
					  paddingLeft="0"
					  paddingTop="5"
					  paddingBottom="5"
					  fontSize="12">
				
				<s:HGroup width="40%" height="100%" >
					<s:Label text="User Name :"/>
				</s:HGroup>
				
				<s:Group width="100%" height="100%">
					<s:Label id="lblUserName"/>
				</s:Group>
			</s:HGroup>
			
			<s:HGroup width="100%"
					  height="20%"
					  color="0xFFFFFF"
					  paddingTop="5"
					  paddingBottom="5"
					  fontSize="12">
				
				<s:HGroup width="50%" height="100%" verticalAlign="middle">
					<s:Label text="Current Password : "/>
				</s:HGroup>
				
				<s:HGroup width="50%" height="100%">
					<s:TextInput id="txtInpOldPassword"
								 displayAsPassword="true" 
								 color="0x000000"
								 skinClass="spark.skins.mobile.TextInputSkin"/>
					<!--//PNCR: temporarly fixed spark.skins.mobile.TextInputSkin to spark.skins.spark.TextInputSkin-->
				</s:HGroup>
			</s:HGroup>
			
			<s:HGroup width="100%"
					  height="20%"
					  color="0xFFFFFF"
					  paddingTop="5"
					  paddingBottom="5"
					  fontSize="12">
				
				<s:HGroup width="50%" height="100%" verticalAlign="middle">
					<s:Label id="lblNewPwd" 
							 visible="true" 
							 text="New Password : "/>
				</s:HGroup>
				<s:HGroup width="50%" height="100%">
					<s:TextInput id="txtInpNewPwd" 
								 visible="true" 
								 displayAsPassword="true" 
								 enabled="true"
								 color="0x000000"
								 skinClass="spark.skins.mobile.TextInputSkin"/>
					<!--//PNCR: temporarly fixed spark.skins.mobile.TextInputSkin to spark.skins.spark.TextInputSkin-->
				</s:HGroup>
			</s:HGroup>
			
			<s:HGroup width="100%"
					  height="20%"
					  color="0xFFFFFF"
					  paddingTop="5"
					  paddingBottom="5"
					  fontSize="12">
				<s:HGroup width="50%" height="100%" verticalAlign="middle">
					<s:Label id="lblretypePwd" 
							 visible="true" 
							 text="Confirm Password : "/>
				</s:HGroup>
				<s:HGroup width="50%" height="100%" >
					
					<s:TextInput id="txtInpConfirmPwd" 
								 visible="true" 
								 color="0x000000"
								 displayAsPassword="true"
								 skinClass="spark.skins.mobile.TextInputSkin"/>
					<!--//PNCR: temporarly fixed spark.skins.mobile.TextInputSkin to spark.skins.spark.TextInputSkin-->
				</s:HGroup>
			</s:HGroup>
			
			<s:HGroup width="100%"
					  height="20%"
					  verticalAlign="middle"
					  horizontalAlign="center"
					  color="0xFFFFFF"
					  paddingTop="5"
					  paddingBottom="5">
				
				<s:Button id="btnOK" 
						  visible="true" 
						  width="40%"
						  height="100%"
						  label="Save"
						  fontSize="12"
						  minHeight="40"
						  click="setNewPassword()" 
						  skinClass="edu.amrita.aview.core.shared.skins.mobile.MobileButtonSkin"/>
				<s:Button id="btnSave" 
						  visible="true" 
						  width="40%"
						  height="100%"
						  fontSize="12"
						  minHeight="40"
						  label="Cancel"
						  click="this.close()" 
						  skinClass="edu.amrita.aview.core.shared.skins.mobile.MobileButtonSkin"/>
			</s:HGroup>
		</s:VGroup>
	</s:Group>
</s:SkinnablePopUpContainer>