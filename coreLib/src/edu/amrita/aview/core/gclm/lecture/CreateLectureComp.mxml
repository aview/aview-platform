<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
// Copyright  Â© 2013 E-Learning Research Lab,
// Amrita Vishwa Vidyapeetham. All rights reserved.
// E-Learning Research Lab and the A-VIEW logo are trademarks or
// registered trademarks of E-Learning Research Lab.
// All other names used are the trademarks of their respective owners.
//
////////////////////////////////////////////////////////////////////////////////
-->

<!---
File		: CreateLectureComp.mxml
Module		: GCLM
Developer(s): Ramesh G, Sethu Subramanian N
Reviewer(s)	:
This component is used to create a new lecute for a class. This is invoked from the
Administration.mxml. Though lecture details are generated automatically when a new
class is created, if any single lecture details need to be created/updated this component
is used it.

In case the class is created with adhoc type,  then no lectures are created. Adminstrators
can create Lecture depends upon the necessity.

Based on the logged in user credentials this component behaves as follows:
Master Admin: Can create, edit lectures for any institute

Institute Administrators: Can create, edit within their institute/child institutes.

Presenter and Viewer: Can view only the lectures for which they have been registered

Moderator: Can edit/create lectures for the classes for which they are the moderators
-->
<components1:InsidePanel xmlns:fx="http://ns.adobe.com/mxml/2009"
						 xmlns:s="library://ns.adobe.com/flex/spark"
						 xmlns:mx="library://ns.adobe.com/flex/mx"
						 xmlns:autoComplete="edu.amrita.aview.core.shared.components.autoComplete.*"
						 xmlns:components="edu.amrita.aview.core.shared.components.*"
						 xmlns:xt="library://ns.tink.ws/flex/mx"
						 width="400"
						 height="450"
						 backgroundColor="#e0effb"
						 color="#0653B3"
						 dropShadowVisible="false"
						 fontSize="15"
						 fontWeight="bold"
						 textAlign="center"
						 xmlns:components1="edu.amrita.aview.core.shared.components.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:RadioButtonGroup id="rbgEndLecture"/>
		<s:RadioButtonGroup id="rbgStartLecture"/>

	</fx:Declarations>

	<fx:Script source="CreateLectureCompUIHandler.as"/>
	<!-- Create lecture Componet Container -->
	<mx:Canvas left="11"
			   right="11"
			   top="10"
			   bottom="12"
			   borderColor="#A3D7FF"
			   borderStyle="solid"
			   chromeColor="#CCCCCC"
			   fontFamily="Arial"
			   fontSize="12"
			   fontWeight="normal"
			   textAlign="left">
		<!-- Label to show * -->
		<s:Label text="*"
				 width="12"
				 height="18"
				 color="#ED3814"
				 fontSize="13"
				 fontWeight="bold"
				 left="10"
				 top="24"
				 fontFamily="Times New Roman"/>
		<!-- Label to show class -->
		<s:Label text="Class :"
				 left="20"
				 top="25"/>

		<!--<Sparkcontrols:AutoComplete left="120" top="25" width="250" height="25"
									id="cmbClasses" select="setCourseInstitute()"
									dataProvider="{classesAC}"
									labelField="className"/>-->
		<!-- Filter Combo box for Class name -->
		<xt:FilterComboBox left="120"
						   top="25"
						   width="250"
						   height="25"
						   id="cmbClasses"
						   change="setCourseInstitute()"
						   dropdownFactory="{GCLMContext.dropdownFactory}"
						   dataProvider="{classes}"
						   prompt=""
						   removeFilterOnSelection="true"
						   labelField="className"
						   selectSingleMatch="true"/>
		<!-- Label to show course name -->
		<s:Label text="Course Name :"
				 left="20"
				 top="65"/>
		 <!-- Text input to accepts course name -->
		<s:TextInput left="120"
					 top="65"
					 id="txtInpCourseName"
					 width="250"
					 height="25"
					 editable="false"/>
		<!-- Label to show institute name -->
		<s:Label text="Institute Name :"
				 left="20"
				 top="105"/>
		<!-- Text input to accepts institute name -->
		<s:TextInput left="120"
					 top="105"
					 id="txtInpInstituteName"
					 width="250"
					 height="25"
					 editable="false"/>
		<!-- Label to show * -->
		<s:Label text="*"
				 width="12"
				 height="18"
				 color="#ED3814"
				 fontSize="13"
				 fontWeight="bold"
				 fontFamily="Times New Roman"
				 top="144"
				 left="10"/>
		<!-- Label to show lecture name -->
		<s:Label text="Lecture Name :"
				 left="20"
				 height="25"
				 top="145"/>
		<!-- Text input to accepts lecture topic -->
		<s:TextInput left="120"
					 top="145"
					 width="250"
					 height="25"
					 id="txtInpLectureTopic"
					 restrict="{GCLMContext.allowedCharactersForName}"
					 maxChars="255"/>
		<!-- Label to show keywords -->
		<s:Label left="20"
				 top="185"
				 text="Keywords :"/>
		<!-- text input to accepts keyword lecture -->
		<s:TextInput width="250"
					 top="185"
					 left="120"
					 height="25"
					 id="txtInpKeywordLecture"
					 maxChars="999"
					 restrict="{GCLMContext.allowedCharactersForName}"/>
		<!-- Label to show * -->
		<s:Label text="*"
				 width="12"
				 height="18"
				 color="#ED3814"
				 fontSize="13"
				 fontWeight="bold"
				 fontFamily="Times New Roman"
				 left="10"
				 top="224"/>
		<!-- Label to show date -->
		<s:Label text="Date :"
				 left="20"
				 top="225"/>
		<!-- Date field for lecture -->
		<components:DateFieldWithKeyDownHandler id="dateLecture"
					  left="120"
					  top="225"
					  width="179"
					  height="25"
					  doubleClick="{dateLecture.text=''}"
					  doubleClickEnabled="true"
					  formatString="DD/MM/YYYY"
					  selectableRange="{{rangeStart: new Date()}}"
					  yearNavigationEnabled="true"/>
		<!-- Label to show * -->
		<s:Label text="*"
				 width="12"
				 height="18"
				 color="#ED3814"
				 fontSize="13"
				 fontWeight="bold"
				 fontFamily="Times New Roman"
				 left="10"
				 top="264"/>
		<!-- Label to show start time -->
		<s:Label text="Start Time :"
				 left="20"
				 top="265"/>
		<!-- Label to show hours -->
		<s:Label text="Hour:"
				 top="265"
				 left="120"/>
		<!-- Numberic Stepper for hours -->
		<s:NumericStepper id="nsHoursStartLecture"
						  left="155"
						  top="265"
						  width="50"
						  creationComplete="nsHoursStartLecture.textDisplay.restrict='0-9';"
						  minimum="0"
						  maximum="12"/>
		<!-- Label to show minutes -->
		<s:Label left="210"
				 top="265"
				 text="Mins:"/>
		<!-- Numeric Stepper for Minutes -->
		<s:NumericStepper id="nsMinsStartLecture"
						  minimum="0"
						  top="265"
						  left="244"
						  maximum="59"
						  width="50"
						  creationComplete="nsMinsStartLecture.textDisplay.restrict='0-9'; "/>
		<!-- Radio button for am -->
		<s:RadioButton left="303"
					   top="260"
					   id="rbAmStartLecture"
					   label="am"
					   groupName="rbgStartLecture"
					   selected="true"/>
		<!-- Radio button for pm -->
		<s:RadioButton left="303"
					   top="280"
					   id="rbPmStartLecture"
					   label="pm"
					   groupName="rbgStartLecture"/>
		<!-- Label to show * -->
		<s:Label text="*"
				 width="12"
				 height="18"
				 color="#ED3814"
				 fontSize="13"
				 fontWeight="bold"
				 fontFamily="Times New Roman"
				 left="10"
				 top="304"/>
		<!-- Label to show end time -->
		<s:Label text="End Time :"
				 width="89"
				 left="20"
				 top="305"/>
		<!-- Label to show hours -->
		<s:Label text="Hour:"
				 top="305"
				 left="120"/>
		<!--Numberic Stepper for showing hours -->
		<s:NumericStepper id="nsHoursEndLecture"
						  minimum="0"
						  maximum="12"
						  width="50"
						  left="155"
						  top="305"
						  creationComplete="nsHoursEndLecture.textDisplay.restrict='0-9'; "/>
		<!-- Label to show minutes -->
		<s:Label left="210"
				 top="305"
				 text="Mins:"/>
		<!-- Numeric Stepper to show minutes-->
		<s:NumericStepper id="nsMinsEndLecture"
						  minimum="0"
						  maximum="59"
						  width="50"
						  top="305"
						  left="244"
						  creationComplete="nsMinsEndLecture.textDisplay.restrict='0-9'; "/>

		<!-- Radio button for am -->
		<s:RadioButton label="am"
					   id="rbAmEndLecture"
					   groupName="rbgEndLecture"
					   top="300"
					   left="303"
					   selected="true"/>
		<!-- Radio button for pm -->
		<s:RadioButton label="pm"
					   top="320"
					   left="303"
					   id="rbPmEndLecture"
					   groupName="rbgEndLecture"/>
		<!-- Save button -->
		<components:ImageButton id="btnSaveLecture"
				  bottom="20"
				  width="80"
				  label="Save"
				  chromeColor="#E0EFFB"
				  click="saveLecture()"
				  color="#000000"
				  cornerRadius="3"
				  horizontalCenter="-60"/>
		<!-- Cancel button -->
		<components:ImageButton bottom="20"
				  width="80"
				  label="Cancel"
				  chromeColor="#E0EFFB"
				  click="closeCreateLectureComp();"
				  color="#000000"
				  cornerRadius="3"
				  horizontalCenter="60"/>

	</mx:Canvas>
	<!-- Icon to close create lecture componet -->
	<components:WindowCloseImage right="5"
			 top="-25"
			 id="imgClose"
			 click="closeCreateLectureComp()"/>
</components1:InsidePanel>
