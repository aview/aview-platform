<?xml version="1.0" encoding="utf-8"?>
<!--- The default skin class for the Spark HSlider component. The thumb and track skins are defined by the
HSliderThumbSkin and HSliderTrackSkin classes, respectively.

	   @see spark.components.HSlider
	   @see spark.skins.spark.HSliderThumbSkin
	   @see spark.skins.spark.HSliderTrackSkin

	  @langversion 3.0
	  @playerversion Flash 10
	  @playerversion AIR 1.5
	  @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:fb="http://ns.adobe.com/flashbuilder/2009" minHeight="11" alpha.disabled="0.5">

	<fx:Metadata>
		<![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.HSlider")]
    ]]>
	</fx:Metadata>

	<fx:Script fb:purpose="styling">
		/* Define the skin elements that should not be colorized.
		   For slider, the skin itself is colorized but the individual parts are not. */
		static private const exclusions:Array=["track", "thumb"];
		
		/**
		 * @private
		 */
		override public function get colorizeExclusions():Array
		{
			return exclusions;
		}
		
		/**
		 * @private
		 */
		override protected function initializationComplete():void
		{
			useChromeColor=true;
			super.initializationComplete();
		}
	</fx:Script>

	<fx:Script>
		/**
		 *  @private
		 */
		override protected function measure():void
		{
			// Temporarily move the thumb to the left of the Slider so measurement
			// doesn't factor in its x position. This allows resizing the
			// HSlider to less than 100px in width. 
			var thumbPos:Number=thumb.getLayoutBoundsX();
			thumb.setLayoutBoundsPosition(0, thumb.getLayoutBoundsY());
			super.measure();
			thumb.setLayoutBoundsPosition(thumbPos, thumb.getLayoutBoundsY());
		}
	</fx:Script>

	<s:states>
		<s:State name="normal"/>
		<s:State name="disabled"/>
	</s:states>

	<fx:Declarations>
		<!--- The tooltip used in the mx.controls.Slider control.
			   To customize the DataTip's appearance, create a custom HSliderSkin class.-->
		<fx:Component id="dataTip">
			<s:DataRenderer y="-34" minWidth="40" minHeight="24">
				<s:Rect left="0" right="0" top="0" bottom="0">
					<s:fill>
						<s:SolidColor alpha=".9" color="0x000000"/>
					</s:fill>
					<s:filters>
						<s:DropShadowFilter angle="90" color="0x999999" distance="3"/>
					</s:filters>
				</s:Rect>
				<s:Label id="labelDisplay" left="5" right="5" top="5" bottom="5" color="white"
						 fontSize="11" fontWeight="normal" horizontalCenter="0" text="{data}"
						 textAlign="center" verticalAlign="middle" verticalCenter="1">
				</s:Label>
			</s:DataRenderer>
		</fx:Component>
	</fx:Declarations>

	<!--- The default skin class is HSliderTrackSkin.
			@copy spark.components.supportClasses.TrackBase#track
			@see spark.skins.spark.HSliderTrackSkin -->
	<s:Button id="track" left="0" right="0" top="0" bottom="0" width="100" minWidth="33"
			  skinClass="spark.skins.spark.HSliderTrackSkin" tabEnabled="false"/>

	<!--- The default skin class is HSliderThumbSkin.
			@copy spark.components.supportClasses.TrackBase#thumb
			@see spark.skins.spark.HSliderThumbSkin -->
	<s:Button id="thumb" top="0" bottom="0" width="11" height="10"
			  skinClass="spark.skins.spark.HSliderThumbSkin" tabEnabled="false"/>
</s:SparkSkin>
