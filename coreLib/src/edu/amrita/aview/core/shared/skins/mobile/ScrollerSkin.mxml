<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
// Copyright  Â© 2013 E-Learning Research Lab,
// Amrita Vishwa Vidyapeetham. All rights reserved.
// E-Learning Research Lab and the A-VIEW logo are trademarks or
// registered trademarks of E-Learning Research Lab.
// All other names used are the trademarks of their respective owners.
//
////////////////////////////////////////////////////////////////////////////////
-->
<!---

File		: ScrollerSkin.mxml
Module		: Document Sharing
Developer(s): Jeevanantham N
Reviewer(s)	: Sivaram SK

ScrollerSkin is custom skin to add fadable scroller

-->

<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 width="100%"
			 height="100%" 
			 xmlns:mobile="edu.amrita.aview.core.shared.skins.mobile.*">
    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.Scroller")]
    ]]>
    </fx:Metadata> 
        
    <fx:Script>
    <![CDATA[    
		/**
		 * @public
		 *
		 * To start to draw the transparent scroller 
		 *
		 * @param null
		 * @return Boolean
		 */
        override public function beginHighlightBitmapCapture() : Boolean
        {
            var needUpdate:Boolean = super.beginHighlightBitmapCapture();
            
            // Draw an opaque rect that fill our entire skin. Our background
            // is transparent, but we don't want focus/error skins to
            // poke through.  This is safe to do since we don't have any 
            // graphic elements as direct children.
            graphics.beginFill(0);
            graphics.drawRect(0, 0, width, height);
            graphics.endFill();

            return needUpdate;
        }
        
		/**
		 * @public
		 *
		 * To end to draw the transparent scroller
		 *
		 * @param null
		 * @return Boolean
		 */
        override public function endHighlightBitmapCapture() : Boolean
        {
            var needUpdate:Boolean = super.endHighlightBitmapCapture();
            
            // Clear the rect we drew in beginBitmapCapture();
            graphics.clear();

            return needUpdate;
        }
    ]]>
    </fx:Script>
        
    <!--A vertical scrollbar that lets you control the portion of data that is displayed 
            when there is too much data to fit vertically in a display area.
            The Scroller determines whether the vertical ScrollBar is visible.-->
    <mobile:VerticalScrollBar id="verticalScrollBar" visible="true" />
    
    <!--A horizontal scrollbar that lets you control the portion of data that is displayed 
            when there is too much data to fit horizontally in a display area.
            The Scroller determines whether the horizontal ScrollBar is visible.-->
    <mobile:HorizontalScrollBar id="horizontalScrollBar" visible="true" />

</s:SparkSkin>
