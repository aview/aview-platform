<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
// Copyright  Â© 2013 E-Learning Research Lab,
// Amrita Vishwa Vidyapeetham. All rights reserved.
// E-Learning Research Lab and the A-VIEW logo are trademarks or
// registered trademarks of E-Learning Research Lab.
// All other names used are the trademarks of their respective owners.
//
////////////////////////////////////////////////////////////////////////////////
-->
<!---

File		: TextAreaSkinComp.mxml
Module		: Whiteboard
Developer(s): Jeevanantham N
Reviewer(s)	: Sivaram SK

TextAreaSkinComp is custom skin to move the text area

-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		alpha.disabledStates="0.5"
		minHeight="0">
	<fx:Metadata>
		[HostComponent("spark.components.TextArea")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			/**
			 * @protected
			 *
			 * To update the property, if user set any property in parent container 
			 *
			 * @param unscaledWidth holds width of the container
			 * @param unscaledHeight holds height of the container
			 * @return void
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				//Controls the visibility of the border and shadow based on the style declared in parent component.
				if (getStyle("borderVisible") == true)
				{
					border.visible=true;
					shadow.visible=true;
					if (promptDisplay)
					{
						promptDisplay.setLayoutBoundsSize(unscaledWidth - 2, unscaledHeight - 2);
						promptDisplay.setLayoutBoundsPosition(1, 1);
					}
				}
				else
				{
					border.visible=false;
					shadow.visible=false;
					if (promptDisplay)
					{
						promptDisplay.setLayoutBoundsSize(unscaledWidth - 1, unscaledHeight - 1);
						promptDisplay.setLayoutBoundsPosition(1, 1);
					}
				}

				//To set border color, border alpha and max height.
				borderStroke.color=getStyle("borderColor");
				borderStroke.alpha=getStyle("borderAlpha");
				textDisplay.maxHeight=getStyle("maxHeight");
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="disabled"
				 stateGroups="disabledStates"/>
		<s:State name="normalWithPrompt"/>
		<s:State name="disabledWithPrompt"
				 stateGroups="disabledStates"/>
	</s:states>
	<!--Border line and color-->
	<s:Rect id="border"
			left="0"
			right="0"
			top="0"
			bottom="0">
		<s:stroke>
			<s:SolidColorStroke id="borderStroke"
								weight="1"/>
		</s:stroke>
	</s:Rect>
	<!--Background color-->
	<s:Rect id="background"
			left="1"
			right="1"
			top="1"
			bottom="1">
		<s:fill>
			<s:SolidColor id="bgFill"
						  color="0xFFFFFF"/>
		</s:fill>
	</s:Rect>
	<!--Shadow effect for parent component-->
	<s:Rect id="shadow"
			left="1"
			top="1"
			right="1"
			height="1">
		<s:fill>
			<s:SolidColor color="0xFFFFFF"
						  alpha="0.02"/>
		</s:fill>
	</s:Rect>
	<!--To hold text-->
	<s:RichEditableText id="textDisplay"
						left="5"
						right="5"
						top="5"
						paddingBottom="5"
						minHeight="80"/>
	
	<!--Prompt label-->
	<s:Label id="promptDisplay"
			 mouseEnabled="false"
			 mouseChildren="false"
			 includeIn="normalWithPrompt,disabledWithPrompt"
			 includeInLayout="false"
			 paddingLeft="3"
			 paddingTop="5"
			 paddingRight="3"
			 paddingBottom="3"/>

</s:Skin>
